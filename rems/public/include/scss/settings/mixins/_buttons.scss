//
// Buttons
//

// Default Buttons
@mixin buttons($hs-background, $hs-border, $hs-hover-background: darken($hs-background, 7.5%), $hs-hover-border: darken($hs-border, 10%), $hs-active-background: darken($hs-background, 10%), $active-border: darken($hs-border, 12.5%)) {
  color: color-yiq($hs-background);
  background-color: ($hs-background);
  border-color: $hs-border;
  @include box-shadow($bs-btn-box-shadow);

  &:hover {
    color: color-yiq($hs-hover-background);
    background-color: ($hs-hover-background);
    border-color: $hs-hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $bs-btn-box-shadow, 0 0 0 $bs-input-btn-focus-width rgba($hs-border, .5);
    } @else {
      box-shadow: 0 0 0 $bs-input-btn-focus-width rgba($hs-border, .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $hs-background;
    border-color: $hs-border;
  }

  &:not([disabled]):not(.disabled):active,
  &:not([disabled]):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($hs-active-background);
    background-color: $hs-active-background;
    border-color: $active-border;

    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $bs-btn-active-box-shadow, 0 0 0 $bs-input-btn-focus-width rgba($hs-border, .5);
    } @else {
      box-shadow: 0 0 0 $bs-input-btn-focus-width rgba($hs-border, .5);
    }
  }
}

// Icon Buttons
@mixin button-text($hs-color, $hs-hover-color) {
  color: ($hs-color);
  background: transparent;

  &:hover,
  &:focus,
  &:active {
    color: ($hs-hover-color);
  }
}